<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        ">
    <!-- 包扫描 -->
    <context:component-scan base-package="com.zhao.web.controller"/>
    <!-- Spring MVC为@Controller分发请求所必需的 -->
    <mvc:annotation-driven/>

    <context:property-placeholder location="classpath:img_server.properties"/>

    <!-- 静态资源映射,交给web容器默认的servlet处理 -->
    <mvc:default-servlet-handler/>

    <!-- 根据视图名，查找spring容器中对应的视图对象 来解析 -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
    <!-- internalResourceViewResolver视图解析器   默认的order属性值是:Integer.MAX_VALUE,所以最后才会轮到它来解析 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="suffix" value=".jsp"></property>
        <property name="prefix" value="/WEB-INF/jsp/"></property>
    </bean>

    <!-- json视图对象 -->
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

    <!-- 多部分文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="104857600" />
        <property name="maxInMemorySize" value="4096" />
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!-- 消费方应用名，用于计算依赖关系 -->
    <dubbo:application name="consumer-manager-web"  />
    <dubbo:registry protocol="zookeeper" address="192.168.92.128:2181" />
    <!-- 增加引用远程服务配置 -->
    <dubbo:reference id="itemService" interface="com.zhao.service.ItemService"/>
    <dubbo:reference id="itemCatService" interface="com.zhao.service.ItemCatService"/>
    <dubbo:reference id="contentCatService" interface="com.zhao.content.service.ContentCatService"/>
    <dubbo:reference id="contentService" interface="com.zhao.content.service.ContentService"/>
    <dubbo:reference id="productToSolr" interface="com.zhao.search.service.ProductToSolr"/>
         <!--异常处理器 -->
        <bean class="com.zhao.web.exception.SpringExceptionResolver"/>

        <!--<mvc:interceptors>-->
        <!-- 登录校验拦截器 -->
        <!--<mvc:interceptor>-->
        <!--<mvc:mapping path="/**" />-->
        <!--<mvc:exclude-mapping path="/assets/**" />-->
        <!--<mvc:exclude-mapping path="/bootstrap3.3.5/**"/>-->
        <!--<mvc:exclude-mapping path="/css/**"/>-->
        <!--<mvc:exclude-mapping path="/js/**"/>-->
        <!--<mvc:exclude-mapping path="/ztree/**"/>-->
        <!--<mvc:exclude-mapping path="/signin.jsp"/>-->
        <!--<mvc:exclude-mapping path="/login.page"/>-->
        <!--<mvc:exclude-mapping path="/user/noAuth.page"/>-->
        <!--<bean class="com.zhao.web.interceptor.LoginInterceptor" />-->
        <!--</mvc:interceptor>-->
        <!--&lt;!&ndash; 权限拦截器 &ndash;&gt;-->
        <!--<mvc:interceptor>-->
        <!--<mvc:mapping path="/**"/>-->
        <!--<mvc:exclude-mapping path="/assets/**" />-->
        <!--<mvc:exclude-mapping path="/bootstrap3.3.5/**"/>-->
        <!--<mvc:exclude-mapping path="/css/**"/>-->
        <!--<mvc:exclude-mapping path="/js/**"/>-->
        <!--<mvc:exclude-mapping path="/ztree/**"/>-->
        <!--<mvc:exclude-mapping path="/signin.jsp"/>-->
        <!--<mvc:exclude-mapping path="/login.page"/>-->
        <!--<mvc:exclude-mapping path="/user/noAuth.page"/>-->
        <!--<bean class="com.zhao.web.interceptor.ResourcePermInterceptor"/>-->
        <!--</mvc:interceptor>-->
        <!--</mvc:interceptors>-->


        </beans>